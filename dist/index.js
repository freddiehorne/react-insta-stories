!function(e,t){"object"==typeof exports&&"object"==typeof module?module.exports=t(require("react")):"function"==typeof define&&define.amd?define("Stories",["React"],t):"object"==typeof exports?exports.Stories=t(require("react")):e.Stories=t(e.React)}(this,(function(e){return function(e){var t={};function r(n){if(t[n])return t[n].exports;var i=t[n]={i:n,l:!1,exports:{}};return e[n].call(i.exports,i,i.exports,r),i.l=!0,i.exports}return r.m=e,r.c=t,r.d=function(e,t,n){r.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:n})},r.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},r.t=function(e,t){if(1&t&&(e=r(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var n=Object.create(null);if(r.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var i in e)r.d(n,i,function(t){return e[t]}.bind(null,i));return n},r.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return r.d(t,"a",t),t},r.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},r.p="",r(r.s=9)}([function(t,r){t.exports=e},function(e,t,r){"use strict";var n=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.initialContext=void 0;var i=n(r(0));t.initialContext={defaultInterval:4e3,width:"100%",height:640};var o=i.default.createContext(t.initialContext);t.default=o},function(e,t,r){"use strict";var n=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.initialContext=void 0;var i=n(r(0));t.initialContext={stories:[]};var o=i.default.createContext(t.initialContext);t.default=o},function(e,t,r){"use strict";var n=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});var i=n(r(0));t.default=i.default.createContext({currentId:0,videoDuration:0,bufferAction:!1,pause:!1,next:function(){}})},function(e,t,r){"use strict";function n(e,t){return function(e){if(Array.isArray(e))return e}(e)||function(e,t){if("undefined"==typeof Symbol||!(Symbol.iterator in Object(e)))return;var r=[],n=!0,i=!1,o=void 0;try{for(var a,u=e[Symbol.iterator]();!(n=(a=u.next()).done)&&(r.push(a.value),!t||r.length!==t);n=!0);}catch(e){i=!0,o=e}finally{try{n||null==u.return||u.return()}finally{if(i)throw o}}return r}(e,t)||function(e,t){if(!e)return;if("string"==typeof e)return i(e,t);var r=Object.prototype.toString.call(e).slice(8,-1);"Object"===r&&e.constructor&&(r=e.constructor.name);if("Map"===r||"Set"===r)return Array.from(e);if("Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r))return i(e,t)}(e,t)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function i(e,t){(null==t||t>e.length)&&(t=e.length);for(var r=0,n=new Array(t);r<t;r++)n[r]=e[r];return n}Object.defineProperty(t,"__esModule",{value:!0});var o=r(0);t.default=function(e,t){var r=n(o.useState(function(e,t){return void 0!==t?t:"undefined"!=typeof window&&window.matchMedia(e).matches}(e,t)),2),i=r[0],a=r[1];return o.useEffect((function(){var t=!0,r=window.matchMedia(e),n=function(){t&&a(!!r.matches)};return r.addListener(n),a(r.matches),function(){t=!1,r.removeListener(n)}}),[e]),i}},function(e,t,r){"use strict";function n(e){return(n="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}var i=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});var o=i(r(0)),a=i(r(24));t.default=function(e){var t=e.story,r=e.globalHeader,i=e.children;return o.default.createElement(o.default.Fragment,null,i,t.header&&o.default.createElement("div",{style:{position:"absolute",left:12,top:20,zIndex:19}},"object"===n(t)?r?r(t.header):o.default.createElement(a.default,{heading:t.header.heading,subheading:t.header.subheading,profileImage:t.header.profileImage}):null))}},function(e,t,r){"use strict";function n(e,t){return function(e){if(Array.isArray(e))return e}(e)||function(e,t){if("undefined"==typeof Symbol||!(Symbol.iterator in Object(e)))return;var r=[],n=!0,i=!1,o=void 0;try{for(var a,u=e[Symbol.iterator]();!(n=(a=u.next()).done)&&(r.push(a.value),!t||r.length!==t);n=!0);}catch(e){i=!0,o=e}finally{try{n||null==u.return||u.return()}finally{if(i)throw o}}return r}(e,t)||function(e,t){if(!e)return;if("string"==typeof e)return i(e,t);var r=Object.prototype.toString.call(e).slice(8,-1);"Object"===r&&e.constructor&&(r=e.constructor.name);if("Map"===r||"Set"===r)return Array.from(e);if("Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r))return i(e,t)}(e,t)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function i(e,t){(null==t||t>e.length)&&(t=e.length);for(var r=0,n=new Array(t);r<t;r++)n[r]=e[r];return n}var o=this&&this.__createBinding||(Object.create?function(e,t,r,n){void 0===n&&(n=r),Object.defineProperty(e,n,{enumerable:!0,get:function(){return t[r]}})}:function(e,t,r,n){void 0===n&&(n=r),e[n]=t[r]}),a=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),u=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var r in e)"default"!==r&&Object.hasOwnProperty.call(e,r)&&o(t,e,r);return a(t,e),t},l=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});var c=u(r(0)),f=l(r(25));t.default=function(e){var t=e.story,r=e.action,i=e.customCollapsed,o=e.children,a=n(c.useState(!1),2),u=a[0],l=a[1],s=f.default;return c.default.createElement(c.default.Fragment,null,o,t.seeMore&&c.default.createElement("div",{style:{position:"absolute",margin:"auto",bottom:u?"unset":0,zIndex:9999,width:"100%",height:u?"100%":"auto"}},c.default.createElement(s,{action:r,toggleMore:function(e){r(e?"pause":"play"),l(e)},showContent:u,seeMoreContent:t.seeMore,customCollapsed:i||t.seeMoreCollapsed})))}},function(e,t,r){"use strict";var n=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});var i=n(r(0)),o=n(r(18));t.default=function(){return i.default.createElement(o.default,null)}},function(e,t,r){"use strict";var n=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.Pause=t.Play=t.Mute=t.Sound=t.Circle=void 0;var i=n(r(0)),o=n(r(19)),a=n(r(20)),u=n(r(21)),l=n(r(22)),c=n(r(23));t.Circle=function(){return i.default.createElement(o.default,null)},t.Sound=function(){return i.default.createElement(a.default,null)},t.Mute=function(){return i.default.createElement(u.default,null)},t.Play=function(){return i.default.createElement(l.default,null)},t.Pause=function(){return i.default.createElement(c.default,null)}},function(e,t,r){"use strict";function n(e){return(n="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function i(e,t){return function(e){if(Array.isArray(e))return e}(e)||function(e,t){if("undefined"==typeof Symbol||!(Symbol.iterator in Object(e)))return;var r=[],n=!0,i=!1,o=void 0;try{for(var a,u=e[Symbol.iterator]();!(n=(a=u.next()).done)&&(r.push(a.value),!t||r.length!==t);n=!0);}catch(e){i=!0,o=e}finally{try{n||null==u.return||u.return()}finally{if(i)throw o}}return r}(e,t)||function(e,t){if(!e)return;if("string"==typeof e)return o(e,t);var r=Object.prototype.toString.call(e).slice(8,-1);"Object"===r&&e.constructor&&(r=e.constructor.name);if("Map"===r||"Set"===r)return Array.from(e);if("Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r))return o(e,t)}(e,t)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function o(e,t){(null==t||t>e.length)&&(t=e.length);for(var r=0,n=new Array(t);r<t;r++)n[r]=e[r];return n}var a=this&&this.__createBinding||(Object.create?function(e,t,r,n){void 0===n&&(n=r),Object.defineProperty(e,n,{enumerable:!0,get:function(){return t[r]}})}:function(e,t,r,n){void 0===n&&(n=r),e[n]=t[r]}),u=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),l=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var r in e)"default"!==r&&Object.hasOwnProperty.call(e,r)&&a(t,e,r);return u(t,e),t},c=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.WithSeeMore=t.WithHeader=void 0;var f=l(r(0)),s=c(r(10)),d=c(r(1)),y=c(r(2)),p=r(15),h=r(16),m=c(r(5)),v=c(r(6)),b=function(e){var t=e.renderers?e.renderers.concat(h.renderers):h.renderers,r={width:e.width,height:e.height,loader:e.loader,header:e.header,storyContainerStyles:e.storyContainerStyles,storyStyles:e.storyStyles,loop:e.loop,defaultInterval:e.defaultInterval,isPaused:e.isPaused,currentIndex:e.currentIndex,onStoryStart:e.onStoryStart,onStoryEnd:e.onStoryEnd,onAllStoriesEnd:e.onAllStoriesEnd,keyboardNavigation:e.keyboardNavigation,preventDefault:e.preventDefault},n=i(f.useState({stories:g(e.stories,t)}),2),o=n[0],a=n[1];return f.useEffect((function(){a({stories:g(e.stories,t)})}),[e.stories,e.renderers]),f.default.createElement(d.default.Provider,{value:r},f.default.createElement(y.default.Provider,{value:o},f.default.createElement(s.default,null)))},g=function(e,t){return e.map((function(e){var r={};"string"==typeof e?(r.url=e,r.type="image"):"object"===n(e)&&(r=Object.assign(r,e));var i=p.getRenderer(r,t);return r.originalContent=r.content,r.content=i,r}))};b.defaultProps={width:"100%",height:640,defaultInterval:4e3},t.WithHeader=m.default,t.WithSeeMore=v.default,t.default=b},function(e,t,r){"use strict";function n(e,t){return function(e){if(Array.isArray(e))return e}(e)||function(e,t){if("undefined"==typeof Symbol||!(Symbol.iterator in Object(e)))return;var r=[],n=!0,i=!1,o=void 0;try{for(var a,u=e[Symbol.iterator]();!(n=(a=u.next()).done)&&(r.push(a.value),!t||r.length!==t);n=!0);}catch(e){i=!0,o=e}finally{try{n||null==u.return||u.return()}finally{if(i)throw o}}return r}(e,t)||function(e,t){if(!e)return;if("string"==typeof e)return i(e,t);var r=Object.prototype.toString.call(e).slice(8,-1);"Object"===r&&e.constructor&&(r=e.constructor.name);if("Map"===r||"Set"===r)return Array.from(e);if("Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r))return i(e,t)}(e,t)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function i(e,t){(null==t||t>e.length)&&(t=e.length);for(var r=0,n=new Array(t);r<t;r++)n[r]=e[r];return n}var o=this&&this.__createBinding||(Object.create?function(e,t,r,n){void 0===n&&(n=r),Object.defineProperty(e,n,{enumerable:!0,get:function(){return t[r]}})}:function(e,t,r,n){void 0===n&&(n=r),e[n]=t[r]}),a=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),u=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var r in e)"default"!==r&&Object.hasOwnProperty.call(e,r)&&o(t,e,r);return a(t,e),t},l=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});var c=u(r(0)),f=l(r(1)),s=l(r(2)),d=l(r(3)),y=l(r(11)),p=l(r(12)),h=l(r(4));t.default=function(){var e=h.default("(max-width: 768px)"),t=n(c.useState(0),2),r=t[0],i=t[1],o=n(c.useState(!1),2),a=o[0],u=o[1],l=n(c.useState(!1),2),v=l[0],b=l[1],g=n(c.useState(0),2),_=g[0],O=g[1],x=c.useRef(),j=c.useRef(!0),w=c.useContext(f.default),E=w.width,S=w.height,M=w.loop,P=w.currentIndex,C=w.isPaused,A=w.keyboardNavigation,I=w.preventDefault,D=c.useContext(s.default).stories;c.useEffect((function(){"number"==typeof P&&(P>=0&&P<D.length?z((function(){return P})):console.error("Index out of bounds. Current index was set to value more than the length of stories array.",P))}),[P]),c.useEffect((function(){"boolean"==typeof C&&u(!0)}),[C]),c.useEffect((function(){if("undefined"!=typeof window&&window.document&&"boolean"==typeof A&&A)return document.addEventListener("keydown",k),function(){document.removeEventListener("keydown",k)}}),[A]),c.useEffect((function(){return function(){j.current=!1}}),[]);var k=function(e){"ArrowLeft"===e.key?R():"ArrowRight"===e.key&&B()},T=function(e,t){u("pause"===e),b(!!t)},z=function(e){i(e),T("pause",!0)},R=function(){z((function(e){return e>0?e-1:e}))},B=function(){j.current&&(M?H():L())},H=function(){z((function(e){return(e+1)%D.length}))},L=function(){z((function(e){return e<D.length-1?e+1:e}))},U=function(e){e.preventDefault(),x.current=setTimeout((function(){T("pause")}),200)},V=function(e){return function(t){t.preventDefault(),x.current&&clearTimeout(x.current),a?T("play"):"next"===e?B():R()}};return c.default.createElement("div",{style:Object.assign({display:"flex",flexDirection:"column",background:"#111",position:"relative",borderRadius:e?"0px":"16px"},{width:E,height:S})},c.default.createElement(d.default.Provider,{value:{bufferAction:v,videoDuration:_,currentId:r,pause:a,next:B}},c.default.createElement(p.default,null)),c.default.createElement(y.default,{action:T,bufferAction:v,playState:a,story:D[r],getVideoDuration:function(e){O(1e3*e)}}),!I&&c.default.createElement("div",{style:m.overlay},c.default.createElement("div",{style:{width:"50%",zIndex:999},onTouchStart:U,onTouchEnd:V("previous"),onMouseDown:U,onMouseUp:V("previous")}),c.default.createElement("div",{style:{width:"50%",zIndex:999},onTouchStart:U,onTouchEnd:V("next"),onMouseDown:U,onMouseUp:V("next")})))};var m={overlay:{position:"absolute",height:"inherit",width:"inherit",display:"flex"}}},function(e,t,r){"use strict";var n=this&&this.__createBinding||(Object.create?function(e,t,r,n){void 0===n&&(n=r),Object.defineProperty(e,n,{enumerable:!0,get:function(){return t[r]}})}:function(e,t,r,n){void 0===n&&(n=r),e[n]=t[r]}),i=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),o=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var r in e)"default"!==r&&Object.hasOwnProperty.call(e,r)&&n(t,e,r);return i(t,e),t},a=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});var u=o(r(0)),l=a(r(1)),c={story:{display:"flex",position:"relative",overflow:"hidden",alignItems:"center"},storyContent:{width:"auto",maxWidth:"100%",maxHeight:"100%",margin:"auto"}};t.default=function(e){var t,r,n=u.useContext(l.default),i=n.width,o=n.height,a=n.loader,f=n.header,s=n.storyStyles,d=function(t,r){switch(t){case"UPDATE_VIDEO_DURATION":return e.getVideoDuration(r.duration),{ack:"OK"}}};return u.default.createElement("div",{style:Object.assign(Object.assign({},c.story),{width:i,height:o})},(t=e.story.content,r={width:i,height:o,loader:a,header:f,storyStyles:s},u.default.createElement(t,{action:e.action,isPaused:e.playState,story:e.story,config:r,messageHandler:d})))}},function(e,t,r){"use strict";function n(e,t){return function(e){if(Array.isArray(e))return e}(e)||function(e,t){if("undefined"==typeof Symbol||!(Symbol.iterator in Object(e)))return;var r=[],n=!0,i=!1,o=void 0;try{for(var a,u=e[Symbol.iterator]();!(n=(a=u.next()).done)&&(r.push(a.value),!t||r.length!==t);n=!0);}catch(e){i=!0,o=e}finally{try{n||null==u.return||u.return()}finally{if(i)throw o}}return r}(e,t)||function(e,t){if(!e)return;if("string"==typeof e)return i(e,t);var r=Object.prototype.toString.call(e).slice(8,-1);"Object"===r&&e.constructor&&(r=e.constructor.name);if("Map"===r||"Set"===r)return Array.from(e);if("Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r))return i(e,t)}(e,t)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function i(e,t){(null==t||t>e.length)&&(t=e.length);for(var r=0,n=new Array(t);r<t;r++)n[r]=e[r];return n}var o=this&&this.__createBinding||(Object.create?function(e,t,r,n){void 0===n&&(n=r),Object.defineProperty(e,n,{enumerable:!0,get:function(){return t[r]}})}:function(e,t,r,n){void 0===n&&(n=r),e[n]=t[r]}),a=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),u=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var r in e)"default"!==r&&Object.hasOwnProperty.call(e,r)&&o(t,e,r);return a(t,e),t},l=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});var c=u(r(0)),f=l(r(13)),s=l(r(3)),d=l(r(1)),y=l(r(2));t.default=function(){var e=n(c.useState(0),2),t=e[0],r=e[1],i=c.useContext(s.default),o=i.currentId,a=i.next,u=i.videoDuration,l=i.pause,h=c.useContext(d.default),m=h.defaultInterval,v=h.onStoryEnd,b=h.onStoryStart,g=h.onAllStoriesEnd,_=c.useContext(y.default).stories;c.useEffect((function(){r(0)}),[o,_]),c.useEffect((function(){return l||(O.current=requestAnimationFrame(j)),function(){cancelAnimationFrame(O.current)}}),[o,l]);var O=c.useRef(),x=t,j=function e(){0===x&&w(),r((function(e){var t=M();return x=e+100/(t/1e3*60),e+100/(t/1e3*60)})),x<100?O.current=requestAnimationFrame(e):(E(),o===_.length-1&&S(),cancelAnimationFrame(O.current),a())},w=function(){b&&b(o,_[o])},E=function(){v&&v(o,_[o])},S=function(){g&&g(o,_)},M=function(){return"video"===_[o].type?u:"number"==typeof _[o].duration?_[o].duration:m};return c.default.createElement("div",{style:p.progressArr},_.map((function(e,r){return c.default.createElement(f.default,{key:r,count:t,width:1/_.length,active:r===o?1:r<o?2:0})})))};var p={progressArr:{display:"flex",justifyContent:"center",maxWidth:"100%",position:"absolute",width:"98%",padding:5,paddingTop:7,alignSelf:"center",zIndex:1001,filter:"drop-shadow(0 1px 8px #222)"}}},function(e,t,r){"use strict";var n=this&&this.__createBinding||(Object.create?function(e,t,r,n){void 0===n&&(n=r),Object.defineProperty(e,n,{enumerable:!0,get:function(){return t[r]}})}:function(e,t,r,n){void 0===n&&(n=r),e[n]=t[r]}),i=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),o=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var r in e)"default"!==r&&Object.hasOwnProperty.call(e,r)&&n(t,e,r);return i(t,e),t},a=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});var u=o(r(0)),l=a(r(14)),c=a(r(3));t.default=function(e){var t=u.useContext(c.default),r=t.bufferAction,n=t.pause,i=e.width,o=e.active;return u.default.createElement(l.default,{width:i,pause:n,bufferAction:r},u.default.createElement("div",{style:Object.assign(Object.assign({},function(t){switch(t.active){case 2:return{width:"100%"};case 1:return{transform:"scaleX(".concat(e.count/100,")")};case 0:default:return{width:0}}}({active:o})),f.inner)}))};var f={inner:{background:"#fff",height:"100%",maxWidth:"100%",borderRadius:2,transformOrigin:"center left",WebkitBackfaceVisibility:"hidden",MozBackfaceVisibility:"hidden",msBackfaceVisibility:"hidden",backfaceVisibility:"hidden",WebkitPerspective:1e3,MozPerspective:1e3,msPerspective:1e3,perspective:1e3}}},function(e,t,r){"use strict";var n=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});var i=n(r(0)),o=function(e){var t=e.width,r=e.pause,n=e.bufferAction;return{width:"".concat(100*t,"%"),opacity:r&&!n?0:1}},a={progress:{height:2,maxWidth:"100%",background:"#555",margin:2,borderRadius:2,transition:"opacity 400ms ease-in-out"}};t.default=function(e){return i.default.createElement("div",{style:Object.assign(Object.assign({},a.progress),o(e))},e.children)}},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.getRenderer=void 0,t.getRenderer=function(e,t){var r=t.map((function(t){return Object.assign(Object.assign({},t),{testerResult:t.tester(e)})})).filter((function(e){return e.testerResult.condition}));return r.sort((function(e,t){return t.testerResult.priority-e.testerResult.priority})),r[0].renderer}},function(e,t,r){"use strict";var n=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.renderers=void 0;var i=n(r(17)),o=n(r(26)),a=n(r(27)),u=n(r(28));t.renderers=[i.default,o.default,u.default,a.default]},function(e,t,r){"use strict";function n(e,t){return function(e){if(Array.isArray(e))return e}(e)||function(e,t){if("undefined"==typeof Symbol||!(Symbol.iterator in Object(e)))return;var r=[],n=!0,i=!1,o=void 0;try{for(var a,u=e[Symbol.iterator]();!(n=(a=u.next()).done)&&(r.push(a.value),!t||r.length!==t);n=!0);}catch(e){i=!0,o=e}finally{try{n||null==u.return||u.return()}finally{if(i)throw o}}return r}(e,t)||function(e,t){if(!e)return;if("string"==typeof e)return i(e,t);var r=Object.prototype.toString.call(e).slice(8,-1);"Object"===r&&e.constructor&&(r=e.constructor.name);if("Map"===r||"Set"===r)return Array.from(e);if("Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r))return i(e,t)}(e,t)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function i(e,t){(null==t||t>e.length)&&(t=e.length);for(var r=0,n=new Array(t);r<t;r++)n[r]=e[r];return n}var o=this&&this.__createBinding||(Object.create?function(e,t,r,n){void 0===n&&(n=r),Object.defineProperty(e,n,{enumerable:!0,get:function(){return t[r]}})}:function(e,t,r,n){void 0===n&&(n=r),e[n]=t[r]}),a=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),u=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var r in e)"default"!==r&&Object.hasOwnProperty.call(e,r)&&o(t,e,r);return a(t,e),t},l=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.tester=t.renderer=void 0;var c=u(r(0)),f=l(r(7)),s=r(8),d=l(r(5)),y=l(r(6)),p=l(r(4));t.renderer=function(e){var t=e.story,r=e.action,i=e.isPaused,o=e.config,a=p.default("(max-width: 768px)"),u=n(c.useState(!1),2),l=u[0],m=u[1],v=o.width,b=o.height,g=o.loader,_=o.storyStyles,O=Object.assign(Object.assign({},h.storyContent),_||{});return c.createElement(d.default,{story:t,globalHeader:o.header},c.createElement(y.default,{story:t,action:r},c.createElement("div",null,c.createElement("div",{style:{position:"absolute",bottom:a?"30px":"40px",right:a?"20px":"30px",display:"flex",flexDirection:"column",justifyContent:"center",zIndex:1e3,height:"64px"}},i?c.createElement("div",{style:h.buttonCircle,onClick:function(){r("play",!0)}},c.createElement("div",{style:{padding:"5px 0 0 5px",margin:"6px 0 0 6px"}},c.createElement(s.Play,null))):c.createElement("div",{style:h.buttonCircle,onClick:function(){r("pause",!0)}},c.createElement("div",{style:{padding:"5px 0 0 1px",margin:"6px 0 0 4px"}},c.createElement(s.Pause,null)))),c.createElement("img",{style:O,src:t.url,onLoad:function(){m(!0),r("play")}}),!l&&c.createElement("div",{style:{width:v,height:b,position:"absolute",left:0,top:0,background:"rgba(0, 0, 0, 0.9)",zIndex:9,display:"flex",justifyContent:"center",alignItems:"center",color:"#ccc"}},g||c.createElement(f.default,null)))))};var h={story:{display:"flex",position:"relative",overflow:"hidden"},storyContent:{width:"auto",maxWidth:"100%",maxHeight:"100%",margin:"auto"},buttonCircle:{width:"64px",height:"64px",borderRadius:"64px",background:"#0F0F19",opacity:.6,display:"flex",alignItems:"center",justifyContent:"center",cursor:"pointer"}};t.tester=function(e){return{condition:!(e.content||e.type&&"image"!==e.type),priority:2}},t.default={renderer:t.renderer,tester:t.tester}},function(e,t,r){"use strict";r.r(t);var n=r(0),i=r.n(n);function o(){return(o=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var r=arguments[t];for(var n in r)Object.prototype.hasOwnProperty.call(r,n)&&(e[n]=r[n])}return e}).apply(this,arguments)}function a(e,t){if(null==e)return{};var r,n,i=function(e,t){if(null==e)return{};var r,n,i={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(i[r]=e[r]);return i}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(i[r]=e[r])}return i}t.default=function(e){e.styles;var t=a(e,["styles"]);return i.a.createElement("svg",o({width:"44",height:"44",xmlns:"http://www.w3.org/2000/svg",stroke:"#fff"},t),i.a.createElement("g",{fill:"none",fillRule:"evenodd",strokeWidth:"2"},i.a.createElement("circle",{cx:"22",cy:"22",r:"1"},i.a.createElement("animate",{attributeName:"r",begin:"0s",dur:"1.8s",values:"1; 20",calcMode:"spline",keyTimes:"0; 1",keySplines:"0.165, 0.84, 0.44, 1",repeatCount:"indefinite"}),i.a.createElement("animate",{attributeName:"stroke-opacity",begin:"0s",dur:"1.8s",values:"1; 0",calcMode:"spline",keyTimes:"0; 1",keySplines:"0.3, 0.61, 0.355, 1",repeatCount:"indefinite"})),i.a.createElement("circle",{cx:"22",cy:"22",r:"1"},i.a.createElement("animate",{attributeName:"r",begin:"-0.9s",dur:"1.8s",values:"1; 20",calcMode:"spline",keyTimes:"0; 1",keySplines:"0.165, 0.84, 0.44, 1",repeatCount:"indefinite"}),i.a.createElement("animate",{attributeName:"stroke-opacity",begin:"-0.9s",dur:"1.8s",values:"1; 0",calcMode:"spline",keyTimes:"0; 1",keySplines:"0.3, 0.61, 0.355, 1",repeatCount:"indefinite"}))))}},function(e,t,r){"use strict";r.r(t);var n=r(0),i=r.n(n);function o(){return(o=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var r=arguments[t];for(var n in r)Object.prototype.hasOwnProperty.call(r,n)&&(e[n]=r[n])}return e}).apply(this,arguments)}function a(e,t){if(null==e)return{};var r,n,i=function(e,t){if(null==e)return{};var r,n,i={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(i[r]=e[r]);return i}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(i[r]=e[r])}return i}t.default=function(e){e.styles;var t=a(e,["styles"]);return i.a.createElement("svg",o({width:"64",height:"64",fill:"none",xmlns:"http://www.w3.org/2000/svg"},t),i.a.createElement("circle",{opacity:".6",cx:"32",cy:"32",r:"32",fill:"#0F0F19"}))}},function(e,t,r){"use strict";r.r(t);var n=r(0),i=r.n(n);function o(){return(o=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var r=arguments[t];for(var n in r)Object.prototype.hasOwnProperty.call(r,n)&&(e[n]=r[n])}return e}).apply(this,arguments)}function a(e,t){if(null==e)return{};var r,n,i=function(e,t){if(null==e)return{};var r,n,i={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(i[r]=e[r]);return i}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(i[r]=e[r])}return i}t.default=function(e){e.styles;var t=a(e,["styles"]);return i.a.createElement("svg",o({width:"35",height:"35",viewBox:"0 0 26 26",fill:"none",xmlns:"http://www.w3.org/2000/svg"},t),i.a.createElement("path",{d:"M12.606 4.1a1.13 1.13 0 00-1.213.184L6.64 8.498H3.69C2.756 8.498 2 9.254 2 10.154v3.342c0 .932.757 1.656 1.69 1.656h2.952l4.75 4.214a1.128 1.128 0 001.875-.84V5.124c-.031-.443-.256-.844-.661-1.025zM16.177 9.728a.71.71 0 00-1.013.105.746.746 0 00.101 1.035c.339.285.534.696.534 1.104 0 .435-.195.847-.535 1.131a.747.747 0 00-.1 1.036.71.71 0 001.012.104c.676-.54 1.063-1.365 1.063-2.27 0-.906-.387-1.68-1.062-2.245zm1.815-2.266a.712.712 0 00-1.013.103.747.747 0 00.1 1.036 4.366 4.366 0 011.6 3.371c0 1.284-.583 2.521-1.6 3.399a.747.747 0 00-.1 1.036.713.713 0 001.014.102c1.352-1.104 2.127-2.759 2.127-4.537 0-1.777-.775-3.38-2.128-4.51zm1.84-2.296a.712.712 0 00-1.014.102.747.747 0 00.1 1.036 7.392 7.392 0 012.642 5.668 7.443 7.443 0 01-2.642 5.696.747.747 0 00-.1 1.035.664.664 0 00.557.297.709.709 0 00.457-.167C21.845 17.146 23 14.656 23 11.973a8.787 8.787 0 00-3.169-6.807z",fill:"#fff"}))}},function(e,t,r){"use strict";r.r(t);var n=r(0),i=r.n(n);function o(){return(o=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var r=arguments[t];for(var n in r)Object.prototype.hasOwnProperty.call(r,n)&&(e[n]=r[n])}return e}).apply(this,arguments)}function a(e,t){if(null==e)return{};var r,n,i=function(e,t){if(null==e)return{};var r,n,i={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(i[r]=e[r]);return i}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(i[r]=e[r])}return i}t.default=function(e){e.styles;var t=a(e,["styles"]);return i.a.createElement("svg",o({width:"35",height:"35",viewBox:"0 0 26 26",fill:"none",xmlns:"http://www.w3.org/2000/svg"},t),i.a.createElement("path",{d:"M10.606.1a1.13 1.13 0 00-1.213.184L4.64 4.498H1.69C.756 4.498 0 5.254 0 6.154v3.343c0 .931.757 1.655 1.69 1.655h2.952l4.75 4.214a1.128 1.128 0 001.875-.84V1.124c-.031-.443-.256-.844-.661-1.025zm7.489 7.741l1.656-1.653a.842.842 0 000-1.193.846.846 0 00-1.195 0L16.9 6.681l-1.686-1.655a.846.846 0 00-1.195 0 .842.842 0 000 1.193l1.656 1.653-1.656 1.653a.842.842 0 000 1.193c.33.33.864.33 1.195 0L16.9 9.064l1.656 1.653c.33.33.865.33 1.195 0a.842.842 0 000-1.193l-1.657-1.683z",fill:"#fff"}))}},function(e,t,r){"use strict";r.r(t);var n=r(0),i=r.n(n);function o(){return(o=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var r=arguments[t];for(var n in r)Object.prototype.hasOwnProperty.call(r,n)&&(e[n]=r[n])}return e}).apply(this,arguments)}function a(e,t){if(null==e)return{};var r,n,i=function(e,t){if(null==e)return{};var r,n,i={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(i[r]=e[r]);return i}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(i[r]=e[r])}return i}t.default=function(e){e.styles;var t=a(e,["styles"]);return i.a.createElement("svg",o({width:"35",height:"35",viewBox:"0 0 22 24",fill:"none",xmlns:"http://www.w3.org/2000/svg"},t),i.a.createElement("path",{d:"M14.148 7.398c.56.344.902.95.902 1.602a1.78 1.78 0 01-.902 1.566L2.862 17.441a1.813 1.813 0 01-1.901.07A1.875 1.875 0 010 15.876V2.125C0 1.447.367.821.961.489a1.887 1.887 0 011.901.036l11.286 6.873z",fill:"#fff"}))}},function(e,t,r){"use strict";r.r(t);var n=r(0),i=r.n(n);function o(){return(o=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var r=arguments[t];for(var n in r)Object.prototype.hasOwnProperty.call(r,n)&&(e[n]=r[n])}return e}).apply(this,arguments)}function a(e,t){if(null==e)return{};var r,n,i=function(e,t){if(null==e)return{};var r,n,i={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(i[r]=e[r]);return i}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(i[r]=e[r])}return i}t.default=function(e){e.styles;var t=a(e,["styles"]);return i.a.createElement("svg",o({width:"35",height:"35",viewBox:"0 0 22 27",fill:"none",xmlns:"http://www.w3.org/2000/svg"},t),i.a.createElement("path",{d:"M14.133 0h-1.662c-1.378 0-2.494 1.117-2.494 2.447v14.965a2.494 2.494 0 002.494 2.495l1.662.093a2.494 2.494 0 002.495-2.494V2.54C16.628 1.163 15.51 0 14.133 0zM4.157 0H2.494A2.494 2.494 0 000 2.494V17.46C0 18.883 1.117 20 2.494 20h1.663a2.494 2.494 0 002.494-2.494V2.54C6.651 1.163 5.534 0 4.157 0z",fill:"#fff"}))}},function(e,t,r){"use strict";var n=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});var i=n(r(0)),o={main:{display:"flex",alignItems:"center"},img:{width:40,height:40,borderRadius:40,marginRight:10,filter:"drop-shadow(0 0px 2px rgba(0, 0, 0, 0.5))",border:"2px solid rgba(255, 255, 255, 0.8)"},text:{display:"flex",flexDirection:"column",filter:"drop-shadow(0 0px 3px rgba(0, 0, 0, 0.9))"},heading:{fontSize:"1rem",color:"rgba(255, 255, 255, 0.9)",margin:0,marginBottom:2},subheading:{fontSize:"0.6rem",color:"rgba(255, 255, 255, 0.8)",margin:0}};t.default=function(e){var t=e.profileImage,r=e.heading,n=e.subheading;return i.default.createElement("div",{style:o.main},t&&i.default.createElement("img",{style:o.img,src:t}),i.default.createElement("span",{style:o.text},i.default.createElement("p",{style:o.heading},r),i.default.createElement("p",{style:o.subheading},n)))}},function(e,t,r){"use strict";var n=this&&this.__createBinding||(Object.create?function(e,t,r,n){void 0===n&&(n=r),Object.defineProperty(e,n,{enumerable:!0,get:function(){return t[r]}})}:function(e,t,r,n){void 0===n&&(n=r),e[n]=t[r]}),i=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),o=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var r in e)"default"!==r&&Object.hasOwnProperty.call(e,r)&&n(t,e,r);return i(t,e),t},a=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});var u=o(r(0)),l=a(r(1));t.default=function(e){var t=e.seeMoreContent,r=e.customCollapsed,n=u.useContext(l.default).keyboardNavigation;u.useEffect((function(){if("undefined"!=typeof window&&window.document&&"boolean"==typeof n&&n)return document.addEventListener("keydown",i),function(){document.removeEventListener("keydown",i)}}),[n]);var i=function(t){"ArrowUp"===t.key?(t.preventDefault(),e.toggleMore(!0)):"ArrowDown"!==t.key&&"Escape"!==t.key||(t.preventDefault(),e.toggleMore(!1))};return e.showContent?u.default.createElement("div",{style:c.seeMoreExpanded},u.default.createElement(t,{close:function(){return e.toggleMore(!1)}})):r?u.default.createElement(r,{action:e.action,toggleMore:e.toggleMore}):u.default.createElement("div",{style:c.seeMore,onClick:function(t){t.preventDefault(),t.stopPropagation(),e.toggleMore(!0)}},u.default.createElement("span",{style:c.seeMoreIcon},"⌃"),u.default.createElement("span",{style:c.seeMoreText},"See more"))};var c={seeMore:{height:"10vh",background:"linear-gradient(rgba(0, 0, 0, 0), rgba(0, 0, 0, 0.2))",display:"flex",flexDirection:"column",width:"100%",alignItems:"center",justifyContent:"flex-end",bottom:0},seeMoreExpanded:{position:"absolute",top:0,left:0,width:"100%",height:"100%",boxSizing:"border-box",zIndex:99999},seeMoreText:{color:"white",textAlign:"center",letterSpacing:"0.1em",marginBottom:"2.2vh",textTransform:"capitalize",opacity:"1",fontSize:"0.8em",transition:"opacity 300ms ease-in-out"},seeMoreIcon:{color:"white",textAlign:"center",letterSpacing:"0.2em",marginBottom:"0.4vh",opacity:"1",filter:"drop-shadow(0 0 5px black)",textTransform:"capitalize",transition:"opacity 300ms ease-in-out"},seeMoreClose:{position:"absolute",filter:"drop-shadow(0 3px 2px #ccc)",right:"0.5rem",top:"0.5rem",fontSize:"1.5rem",opacity:"0.7",padding:"1rem"}}},function(e,t,r){"use strict";function n(e,t){return function(e){if(Array.isArray(e))return e}(e)||function(e,t){if("undefined"==typeof Symbol||!(Symbol.iterator in Object(e)))return;var r=[],n=!0,i=!1,o=void 0;try{for(var a,u=e[Symbol.iterator]();!(n=(a=u.next()).done)&&(r.push(a.value),!t||r.length!==t);n=!0);}catch(e){i=!0,o=e}finally{try{n||null==u.return||u.return()}finally{if(i)throw o}}return r}(e,t)||function(e,t){if(!e)return;if("string"==typeof e)return i(e,t);var r=Object.prototype.toString.call(e).slice(8,-1);"Object"===r&&e.constructor&&(r=e.constructor.name);if("Map"===r||"Set"===r)return Array.from(e);if("Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r))return i(e,t)}(e,t)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function i(e,t){(null==t||t>e.length)&&(t=e.length);for(var r=0,n=new Array(t);r<t;r++)n[r]=e[r];return n}var o=this&&this.__createBinding||(Object.create?function(e,t,r,n){void 0===n&&(n=r),Object.defineProperty(e,n,{enumerable:!0,get:function(){return t[r]}})}:function(e,t,r,n){void 0===n&&(n=r),e[n]=t[r]}),a=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),u=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var r in e)"default"!==r&&Object.hasOwnProperty.call(e,r)&&o(t,e,r);return a(t,e),t},l=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.tester=t.renderer=void 0;var c=u(r(0)),f=l(r(7)),s=r(8),d=l(r(5)),y=l(r(6)),p=l(r(4));t.renderer=function(e){var t=e.story,r=e.action,i=e.isPaused,o=e.config,a=e.messageHandler,u=p.default("(max-width: 768px)"),l=n(c.useState(!1),2),m=l[0],v=l[1],b=n(c.useState(!0),2),g=b[0],_=b[1],O=o.width,x=o.height,j=o.loader,w=o.storyStyles,E=Object.assign(Object.assign({},h.storyContent),w||{}),S=c.useRef(null);c.useEffect((function(){S.current&&(i?S.current.pause():S.current.play().catch((function(){})))}),[i]);var M=function(){r("pause",!0)},P=function(){r("play",!0)};return c.createElement(d.default,{story:t,globalHeader:o.header},c.createElement(y.default,{story:t,action:r},c.createElement("div",{style:h.videoContainer},c.createElement("div",{style:{position:"absolute",bottom:u?"20px":"40px",right:u?"20px":"30px",display:"flex",flexDirection:"column",justifyContent:"space-between",zIndex:1e3,height:"150px"}},g?c.createElement("div",{style:h.buttonCircle,onClick:function(){return _(!1)}},c.createElement(s.Sound,null)):c.createElement("div",{style:h.buttonCircle,onClick:function(){return _(!0)}},c.createElement("div",{style:{padding:"5px 0 0 5px",marginTop:"9px"}},c.createElement(s.Mute,null))),i?c.createElement("div",{style:h.buttonCircle,onClick:P},c.createElement("div",{style:{padding:"5px 0 0 5px",margin:"6px 0 0 6px"}},c.createElement(s.Play,null))):c.createElement("div",{style:h.buttonCircle,onClick:M},c.createElement("div",{style:{padding:"5px 0 0 1px",margin:"6px 0 0 4px"}},c.createElement(s.Pause,null)))),c.createElement("video",{ref:S,style:E,src:t.url,controls:!1,onLoadedData:function(){a("UPDATE_VIDEO_DURATION",{duration:S.current.duration}),v(!0),S.current.play().then((function(){r("play")})).catch((function(){_(!0),S.current.play().finally((function(){r("play")}))}))},playsInline:!0,onWaiting:M,onPlaying:P,muted:g,autoPlay:!0,"webkit-playsinline":"true"}),!m&&c.createElement("div",{style:{width:O,height:x,position:"absolute",left:0,top:0,background:"rgba(0, 0, 0, 0.9)",zIndex:9,display:"flex",justifyContent:"center",alignItems:"center",color:"#ccc"}},j||c.createElement(f.default,null)))))};var h={storyContent:{width:"auto",maxWidth:"100%",maxHeight:"100%",margin:"auto"},videoContainer:{display:"flex",alignItems:"center",justifyContent:"center"},buttonCircle:{width:"64px",height:"64px",borderRadius:"64px",background:"#0F0F19",opacity:.6,display:"flex",alignItems:"center",justifyContent:"center",cursor:"pointer"}};t.tester=function(e){return{condition:"video"===e.type,priority:2}},t.default={renderer:t.renderer,tester:t.tester}},function(e,t,r){"use strict";var n=this&&this.__createBinding||(Object.create?function(e,t,r,n){void 0===n&&(n=r),Object.defineProperty(e,n,{enumerable:!0,get:function(){return t[r]}})}:function(e,t,r,n){void 0===n&&(n=r),e[n]=t[r]}),i=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),o=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var r in e)"default"!==r&&Object.hasOwnProperty.call(e,r)&&n(t,e,r);return i(t,e),t};Object.defineProperty(t,"__esModule",{value:!0}),t.tester=t.renderer=void 0;var a=o(r(0));t.renderer=function(e){var t=e.story,r=e.action;return a.useEffect((function(){r("play")}),[t]),a.createElement("div",{style:u.storyContent},a.createElement("p",{style:u.text},"This story could not be loaded."))};var u={storyContent:{width:"100%",maxHeight:"100%",margin:"auto"},text:{textAlign:"center",color:"white",width:"90%",margin:"auto"}};t.tester=function(){return{condition:!0,priority:1}},t.default={renderer:t.renderer,tester:t.tester}},function(e,t,r){"use strict";var n=this&&this.__createBinding||(Object.create?function(e,t,r,n){void 0===n&&(n=r),Object.defineProperty(e,n,{enumerable:!0,get:function(){return t[r]}})}:function(e,t,r,n){void 0===n&&(n=r),e[n]=t[r]}),i=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),o=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var r in e)"default"!==r&&Object.hasOwnProperty.call(e,r)&&n(t,e,r);return i(t,e),t};Object.defineProperty(t,"__esModule",{value:!0}),t.tester=t.renderer=void 0;var a=o(r(0));t.renderer=function(e){a.useEffect((function(){e.action("play")}),[e.story]);var t=e.story.originalContent;return a.createElement(t,Object.assign({},e))},t.tester=function(e){return{condition:!!e.content,priority:2}},t.default={renderer:t.renderer,tester:t.tester}}])}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,